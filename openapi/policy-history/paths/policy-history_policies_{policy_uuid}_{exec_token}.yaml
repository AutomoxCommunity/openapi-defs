get:
  tags:
    - Run Results
  summary: Device policy run results
  description: >-
    Retrieve the results of a policy at the device level for a given execution
    token
  operationId: policyDeviceDetail
  parameters:
    - name: policy_uuid
      in: path
      description: Policy UUID
      required: true
      schema:
        type: string
        format: uuid
      examples:
        PolicyUUIDExample:
          value: 56c0ba07-69f2-4f7c-b0a1-2bb0ed68578e
    - name: exec_token
      in: path
      description: Execution Token
      required: true
      schema:
        type: string
        format: uuid
      examples:
        ExecTokenExample:
          value: 10af9475-fd20-4189-bb9c-e1c707ff2670
    - name: org
      in: query
      description: Organization UUID
      required: true
      schema:
        type: string
        format: uuid
      examples:
        OrgUUIDExample:
          value: 56c0ba07-69f2-4f7c-b0a1-2bb0ed68578e
    - name: sort
      in: query
      description: Sort by `run_time`, `device_display_name`, or `result_status`
      required: false
      schema:
        type: string
        description: Comma delimited list of sorts to apply
      examples:
        SortExample:
          value: run_time:asc
    - name: result_status
      in: query
      description: >-
        Filter by Policy run result: `applied`, `failed`, `pending`, not_applicable, not_included. Format:
        `result_status:in[]=applied`. Available operators: `equals`, `in`
      required: false
      schema:
        type: string
      examples:
        ResultStatusExample:
          value: applied
    - name: device_name
      in: query
      description: >-
        Filter by the device name. This will search both device hostname and
        custom name.Format: `device_name:like=WIN-RM1OMA6IBCA`
      required: false
      schema:
        type: string
      examples:
        DeviceNameExample:
          value: Marcus' Macbook Pro
    - name: page
      in: query
      required: false
      description: >-
        The page of results you wish to be returned with page numbers starting
        at 0. See [About Automox API - Pagination](/developer-portal#pagination)
      schema:
        type: integer
        format: int32
      examples:
        PageExample:
          value: 0
    - name: limit
      in: query
      description: Default is 25, max is 5000
      required: false
      schema:
        type: integer
        format: int32
        maximum: 5000
      examples:
        LimitExample:
          value: 25
  x-codeSamples:
    - lang: PowerShell
      source:
        $ref: >-
          ../code_samples/PowerShell/policy-history_policy-runs_{policy_uuid}_{exec_token}/get.ps1
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            $ref: "../components/schemas/CollectionResponseDeviceDetailsResource.yaml"
          example:
            metadata:
              current_page: 0
              total_pages: 100
              total_count: 1300
              limit: 25
              links:
                previous: ''
                next: policyreport.automox.com?page=1&limit=25
            data:
              - device_id: 250624
                device_uuid: 56c0ba07-69f2-4f7c-b0a1-2bb0ed68578e
                hostname: WIN-RM1OMA6IBCA
                custom_name: Marcus' Macbook Pro
                display_name: Marcus' Macbook Pro
                result_status: success
                result-reason: ""
                run_time: '2024-03-27T12:23:45Z'
                event_time: '2024-03-27T12:23:45Z'
                patches:
                  - KB123456
                  - KB234567
                stdout: "Successfully installed KB123456\nSuccessfully installed KB234567\n"
                stderr: ""
                error_code: 1
                device_deleted_at: '2024-03-27T12:23:45Z'
                policy_uuid: 56c0ba07-69f2-4f7c-b0a1-2bb0ed68578e
                policy_name: Patch Tuesday
                policy_type: patch
    '400':
      description: Bad Request
      $ref: ../components/responses/BadRequest.yaml
    '401':
      description: Unauthorized
      $ref: ../components/responses/Unauthorized.yaml
    '403':
      description: Unauthorized Action
      $ref: ../components/responses/UnauthorizedAction.yaml
    '404':
      description: Not Found
      $ref: ../components/responses/NotFound.yaml
    '408':
      description: Request Timeout
      $ref: ../components/responses/RequestTimeout.yaml
    '429':
      description: Rate Limit
      $ref: ../components/responses/RateLimit.yaml
    '500':
      description: Service Unavailable
      $ref: ../components/responses/ServiceUnavailable.yaml
